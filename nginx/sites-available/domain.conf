# Redirect http to https
server {
	listen 80;
	server_name example.com www.example.com;

	return 301 https://www.example.com$request_uri;
}

# Define path to cache and memory zone. The memory zone should be unique.
# keys_zone=ssl-fastcgi-cache.com:100m creates the memory zone and sets the maximum size in MBs.
# inactive=60m will remove cached items that haven't been accessed for 60 minutes or more.
fastcgi_cache_path /sites/ssl-fastcgi-cache.com/cache levels=1:2 keys_zone=ssl-fastcgi-cache.com:100m inactive=60m;

server {
	# Ports to listen on, uncomment one.
	listen 443 ssl;
	# listen 443 ssl http2;

	# Server name to listen for
	server_name www.example.com;

	# Path to document root
	root /var/www/html;

	# Paths to certificate files.
	ssl_certificate /etc/ssl/sites/${MY_DOMAIN}.crt;
	ssl_certificate_key /etc/ssl/sites/${MY_DOMAIN}.key;

	# File to be used as index
	index index.php index.html;

	# Overrides logs defined in nginx.conf, allows per site logs.
	access_log /var/log/sites/${MY_DOMAIN}/access.log;
	error_log /var/log/sites/${MY_DOMAIN}/error.log;

	# Default server block rules
	include wordpress/defaults.conf;

	# Fastcgi cache rules
	include wordpress/fastcgi-cache.conf;

	# SSL rules
	include wordpress/ssl.conf;

	location / {
		try_files $uri $uri/ /index.php?$args;
	}

	location ~ \.php$ {
		try_files $uri =404;
		include wordpress/fastcgi-params.conf;

		# Change socket if using PHP pools or PHP 5
        #fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        fastcgi_pass unix:/var/run/php5-fpm.sock;

		# Skip cache based on rules in wordpress/fastcgi-cache.conf.
		fastcgi_cache_bypass $skip_cache;
		fastcgi_no_cache $skip_cache;

		# Define memory zone for caching. Should match key_zone in fastcgi_cache_path above.
		fastcgi_cache ssl-fastcgi-cache.com;

		# Define caching time.
		fastcgi_cache_valid 60m;
	}

	# Uncomment if using the fastcgi_cache_purge module and Nginx Helper plugin (https://wordpress.org/plugins/nginx-helper/)
	# location ~ /purge(/.*) {
	#	fastcgi_cache_purge ssl-fastcgi-cache.com "$scheme$request_method$host$1";
	# }
}
